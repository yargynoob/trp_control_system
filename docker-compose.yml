version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-defect_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defect_password}
      POSTGRES_DB: ${POSTGRES_DB:-defect_management}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - defect_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - defect_network

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - defect_network

  frontend:
    build: ./frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - defect_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - defect_network

volumes:
  postgres_data:

networks:
  defect_network:
    driver: bridge
